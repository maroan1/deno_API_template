openapi: 3.0.3
info:
    title: My Api
    description: My API description
    version: 1.0.0
    contact:
        name: My Name
        email: myemail@correo.com
    license:
        name: MIT
        url: https://opensource.org/licenses/MIT
servers:
    - url: http://localhost:{port}/api/{basePath}
      description: Local server
      variables:
        port:
            default: '8080'
            description: Server port
        basePath:
            default: v1
            description: API base path
tags:
    - name: test
      description: Test operations
    - name: auth
      description: Authentication operations
    - name: user
      description: User operations
paths:
    /test:
        get:
            tags:
                - test
            summary: Test operation
            description: Test operation description
            operationId: test
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        description: Message
                                        example: Hello World
    /auth/login:
        post:
            tags:
                - auth
            summary: Logs user into the system
            description: User login authentication with JWT
            operationId: login
            requestBody:
                description: User credentials
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                    description: Username
                                    example: my@email.com
                                password:
                                    type: string
                                    description: Password
                                    example: myPassword
            responses:
                '200':
                    description: successful operation
                    headers:
                        X-Rate-Limit:
                            description: calls per hour allowed by the user
                            schema:
                                type: integer
                                format: int32
                        X-Expires-After:
                            description: date in UTC when token expires
                            schema:
                                type: string
                                format: date-time
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    accessToken:
                                        type: string
                                        description: JWT access token
                                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
                                    refreshToken:
                                        type: string
                                        description: JWT refresh token
                                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
                '400':
                    description: Invalid username/password supplied

    /auth/register:
        post:
            tags:
                - auth
            summary: Register a new user
            description: Register a new user
            operationId: register
            requestBody:
                description: User credentials
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                username:
                                    type: string
                                    description: Username
                                    example: myUsername
                                email:
                                    type: string
                                    description: Username
                                    example: my@email.com
                                password:
                                    type: string
                                    description: Password
                                    example: myPassword
            responses:
                '204':
                    description: successful operation

    /user:
        get:
            tags:
                - user
            summary: Get your user data
            description: Get user data that you are loged in
            operationId: getUser
            security:
                - bearerAuth: []
            responses:
                '200':
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                '401':
                    description: Unauthorized
        put:
            tags:
                - user
            summary: Update your user data
            description: Update user data that you are loged in
            operationId: updateUser
            security:
                - bearerAuth: []
            requestBody:
                description: User data
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/User'
            responses:
                '204':
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                '400':
                    description: Invalid user supplied
                '401':
                    description: Unauthorized
components:
    schemas:
        User:
            type: object
            properties:
                _id:
                    type: string
                    description: User ID
                    example: 5f5f5f5f5f5f5f5f5f5f5f5f
                    readOnly: true
                username:
                    type: string
                    example: myUsername
                firstName:
                    type: string
                    example: John
                lastName:
                    type: string
                    example: Doe
                email:
                    type: string
                    example: user@email.com
                password:
                    type: string
                    example: myPassword
    securitySchemes:
        bearerAuth:
            type: "http"
            scheme: "bearer"
            bearerFormat: "JWT"

